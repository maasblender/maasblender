name: compliance checks

on:
  push:
    branches:
    paths: 'src/**'
  pull_request:
    types: [opened, reopened, edited]
    branches: main
    paths: 'src/**'
  workflow_dispatch:

jobs:
  set-matrix:
    runs-on: ubuntu-latest
    outputs:
      subdirs: ${{ steps.set-subdir.outputs.value }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Get src subdirectories
        id: set-subdir
        run: |
          list=`ls -1F src | jq -R -s -c 'split("\n")[:-1]'`
          echo "::set-output name=value::$(echo $list | jq -c .)"
  check-license:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: ${{ fromJson(needs.set-matrix.outputs.subdirs) }}
    steps:
      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip' 
      - name: Checkout
        uses: actions/checkout@v3
      - name: Get allowed licence list
        working-directory: ci
        run: |
          LICENSE_LIST=`cat allowed-license.lst | awk '{if($0 ~ /^[a-zA-Z].*/)print;}' | tr '\n' ';'`
          echo "license=$LICENSE_LIST" >> $GITHUB_ENV
      - name: Install and run pip-licenses          
        working-directory: src/${{ matrix.target }}
        run: |
          echo "${{ matrix.target }}"
          pip install -r requirements.txt
          pip install -U pip-licenses 
          pip-licenses --allow-only="${{ env.license }}"